// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/service.proto

#ifndef PROTOBUF_proto_2fservice_2eproto__INCLUDED
#define PROTOBUF_proto_2fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace Tnode {
class AckRegService;
class AckRegServiceDefaultTypeInternal;
extern AckRegServiceDefaultTypeInternal _AckRegService_default_instance_;
class ReqRegService;
class ReqRegServiceDefaultTypeInternal;
extern ReqRegServiceDefaultTypeInternal _ReqRegService_default_instance_;
}  // namespace Tnode

namespace Tnode {

namespace protobuf_proto_2fservice_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_proto_2fservice_2eproto

// ===================================================================

class ReqRegService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Tnode.ReqRegService) */ {
 public:
  ReqRegService();
  virtual ~ReqRegService();

  ReqRegService(const ReqRegService& from);

  inline ReqRegService& operator=(const ReqRegService& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRegService& default_instance();

  static inline const ReqRegService* internal_default_instance() {
    return reinterpret_cast<const ReqRegService*>(
               &_ReqRegService_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ReqRegService* other);

  // implements Message ----------------------------------------------

  inline ReqRegService* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqRegService* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqRegService& from);
  void MergeFrom(const ReqRegService& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqRegService* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 3;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 3;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional int32 serverId = 1;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // optional int32 svrType = 2;
  bool has_svrtype() const;
  void clear_svrtype();
  static const int kSvrTypeFieldNumber = 2;
  ::google::protobuf::int32 svrtype() const;
  void set_svrtype(::google::protobuf::int32 value);

  // optional int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // optional int32 roomId = 5;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 5;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Tnode.ReqRegService)
 private:
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_svrtype();
  void clear_has_svrtype();
  void set_has_host();
  void clear_has_host();
  void set_has_port();
  void clear_has_port();
  void set_has_roomid();
  void clear_has_roomid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 svrtype_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 roomid_;
  friend struct protobuf_proto_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AckRegService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Tnode.AckRegService) */ {
 public:
  AckRegService();
  virtual ~AckRegService();

  AckRegService(const AckRegService& from);

  inline AckRegService& operator=(const AckRegService& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckRegService& default_instance();

  static inline const AckRegService* internal_default_instance() {
    return reinterpret_cast<const AckRegService*>(
               &_AckRegService_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AckRegService* other);

  // implements Message ----------------------------------------------

  inline AckRegService* New() const PROTOBUF_FINAL { return New(NULL); }

  AckRegService* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AckRegService& from);
  void MergeFrom(const AckRegService& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AckRegService* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string errmsg = 3;
  bool has_errmsg() const;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 3;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // optional sint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 serverId = 2;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Tnode.AckRegService)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_errmsg();
  void clear_has_errmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 serverid_;
  friend struct protobuf_proto_2fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqRegService

// optional int32 serverId = 1;
inline bool ReqRegService::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqRegService::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqRegService::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqRegService::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 ReqRegService::serverid() const {
  // @@protoc_insertion_point(field_get:Tnode.ReqRegService.serverId)
  return serverid_;
}
inline void ReqRegService::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:Tnode.ReqRegService.serverId)
}

// optional int32 svrType = 2;
inline bool ReqRegService::has_svrtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqRegService::set_has_svrtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqRegService::clear_has_svrtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqRegService::clear_svrtype() {
  svrtype_ = 0;
  clear_has_svrtype();
}
inline ::google::protobuf::int32 ReqRegService::svrtype() const {
  // @@protoc_insertion_point(field_get:Tnode.ReqRegService.svrType)
  return svrtype_;
}
inline void ReqRegService::set_svrtype(::google::protobuf::int32 value) {
  set_has_svrtype();
  svrtype_ = value;
  // @@protoc_insertion_point(field_set:Tnode.ReqRegService.svrType)
}

// optional string host = 3;
inline bool ReqRegService::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqRegService::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqRegService::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqRegService::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& ReqRegService::host() const {
  // @@protoc_insertion_point(field_get:Tnode.ReqRegService.host)
  return host_.GetNoArena();
}
inline void ReqRegService::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tnode.ReqRegService.host)
}
#if LANG_CXX11
inline void ReqRegService::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Tnode.ReqRegService.host)
}
#endif
inline void ReqRegService::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tnode.ReqRegService.host)
}
inline void ReqRegService::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tnode.ReqRegService.host)
}
inline ::std::string* ReqRegService::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:Tnode.ReqRegService.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegService::release_host() {
  // @@protoc_insertion_point(field_release:Tnode.ReqRegService.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegService::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:Tnode.ReqRegService.host)
}

// optional int32 port = 4;
inline bool ReqRegService::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqRegService::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqRegService::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqRegService::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 ReqRegService::port() const {
  // @@protoc_insertion_point(field_get:Tnode.ReqRegService.port)
  return port_;
}
inline void ReqRegService::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:Tnode.ReqRegService.port)
}

// optional int32 roomId = 5;
inline bool ReqRegService::has_roomid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqRegService::set_has_roomid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqRegService::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqRegService::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 ReqRegService::roomid() const {
  // @@protoc_insertion_point(field_get:Tnode.ReqRegService.roomId)
  return roomid_;
}
inline void ReqRegService::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Tnode.ReqRegService.roomId)
}

// -------------------------------------------------------------------

// AckRegService

// optional sint32 result = 1;
inline bool AckRegService::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckRegService::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckRegService::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckRegService::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 AckRegService::result() const {
  // @@protoc_insertion_point(field_get:Tnode.AckRegService.result)
  return result_;
}
inline void AckRegService::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Tnode.AckRegService.result)
}

// optional int32 serverId = 2;
inline bool AckRegService::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckRegService::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckRegService::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckRegService::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 AckRegService::serverid() const {
  // @@protoc_insertion_point(field_get:Tnode.AckRegService.serverId)
  return serverid_;
}
inline void AckRegService::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:Tnode.AckRegService.serverId)
}

// optional string errmsg = 3;
inline bool AckRegService::has_errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckRegService::set_has_errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckRegService::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckRegService::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errmsg();
}
inline const ::std::string& AckRegService::errmsg() const {
  // @@protoc_insertion_point(field_get:Tnode.AckRegService.errmsg)
  return errmsg_.GetNoArena();
}
inline void AckRegService::set_errmsg(const ::std::string& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Tnode.AckRegService.errmsg)
}
#if LANG_CXX11
inline void AckRegService::set_errmsg(::std::string&& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Tnode.AckRegService.errmsg)
}
#endif
inline void AckRegService::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Tnode.AckRegService.errmsg)
}
inline void AckRegService::set_errmsg(const char* value, size_t size) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Tnode.AckRegService.errmsg)
}
inline ::std::string* AckRegService::mutable_errmsg() {
  set_has_errmsg();
  // @@protoc_insertion_point(field_mutable:Tnode.AckRegService.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AckRegService::release_errmsg() {
  // @@protoc_insertion_point(field_release:Tnode.AckRegService.errmsg)
  clear_has_errmsg();
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AckRegService::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    set_has_errmsg();
  } else {
    clear_has_errmsg();
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:Tnode.AckRegService.errmsg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Tnode

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fservice_2eproto__INCLUDED
